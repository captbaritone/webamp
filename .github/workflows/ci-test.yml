name: CI Test

on: [push]

# Global environment variables
env:
  NODE_VERSION: '20.x'

jobs:
  # Job 1: Install dependencies and cache them
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-keys.outputs.cache-key }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          
      - name: Generate cache keys
        id: cache-keys
        run: |
          echo "cache-key=node-modules-${{ hashFiles('**/yarn.lock') }}" >> $GITHUB_OUTPUT
          
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ steps.cache-keys.outputs.cache-key }}
          restore-keys: |
            node-modules-
            
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --prefer-offline --frozen-lockfile

  # Job 2: Build packages (depends on setup)
  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Restore node modules cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          fail-on-cache-miss: true
          
      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            packages/ani-cursor/built
            packages/webamp/built
            packages/webamp/dist
          key: build-artifacts-${{ github.sha }}
          
      - name: Build packages
        run: |
          yarn workspace ani-cursor build
          yarn workspace webamp build
          yarn workspace webamp build-library

  # Job 3: Lint (parallel with build)
  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Restore node modules cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          fail-on-cache-miss: true
          
      - name: Run linting
        run: |
          yarn lint
          yarn workspace webamp type-check

  # Job 4: Unit tests (parallel with build and lint)
  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Restore node modules cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          fail-on-cache-miss: true
          
      - name: Setup test configuration
        run: touch packages/skin-database/config.js
        
      - name: Run unit tests
        run: |
          yarn test
          yarn workspace webamp test

  # Job 5: Integration tests (commented out but optimized for when needed)
  # integration-test:
  #   runs-on: ubuntu-latest
  #   needs: [setup, build]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         
  #     - name: Restore node modules cache
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           node_modules
  #           packages/*/node_modules
  #         key: ${{ needs.setup.outputs.cache-key }}
  #         fail-on-cache-miss: true
  #         
  #     - name: Restore build artifacts
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           packages/ani-cursor/built
  #           packages/webamp/built
  #           packages/webamp/dist
  #         key: build-artifacts-${{ github.sha }}
  #         fail-on-cache-miss: true
  #         
  #     - name: Run integration tests
  #       run: yarn workspace webamp integration-tests
  #       env:
  #         CI: true
  #         
  #     - name: Upload screenshot diffs
  #       if: failure()
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: image_diffs
  #         path: packages/webamp/js/__tests__/__image_snapshots__/__diff_output__/
  #         
  #     - name: Generate new screenshots
  #       if: failure()
  #       run: yarn workspace webamp integration-tests -u
  #       
  #     - name: Upload new screenshots
  #       if: failure()
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: new_images
  #         path: packages/webamp/js/__tests__/__image_snapshots__/

  # Job 6: Publish to NPM (only after all tests pass)
  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.repository == 'captbaritone/webamp'
    needs: [build, lint, test] # Remove integration-test from here when enabled
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org/
          
      - name: Restore node modules cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          fail-on-cache-miss: true
          
      - name: Restore build artifacts
        uses: actions/cache@v4
        with:
          path: |
            packages/ani-cursor/built
            packages/webamp/built
            packages/webamp/dist
          key: build-artifacts-${{ github.sha }}
          fail-on-cache-miss: true
          
      - name: Set version for next release
        if: github.ref == 'refs/heads/master'
        run: |
          echo "Setting version to 0.0.0-next-${RELEASE_COMMIT_SHA::7}"
          yarn workspace webamp version --new-version 0.0.0-next-${RELEASE_COMMIT_SHA::7} --no-git-tag-version
        env:
          RELEASE_COMMIT_SHA: ${{ github.sha }}
          
      - name: Build release version
        if: github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
        run: exit 1 # TODO: Script to update version number in webampLazy.tsx
        
      - name: Publish to npm
        working-directory: ./packages/webamp
        if: github.ref == 'refs/heads/master' || (github.ref_type == 'tag' && startsWith(github.ref_name, 'v'))
        run: npm publish ${TAG}
        env:
          TAG: ${{ github.ref == 'refs/heads/master' && '--tag=next' || '' }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
